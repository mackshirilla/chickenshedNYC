{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/requests/auth/authenticateUser.ts", "../src/utils/requests/studentRequests.ts", "../src/utils/forms/imageUpload.ts", "../src/utils/forms/inputValidation.ts", "../src/addStudent.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Authenticate User\nexport function authenticate(): Promise<void> {\n  const authToken = localStorage.getItem('authToken');\n\n  //if no authToken, redirect to login page\n  if (!authToken) {\n    window.location.href = '/login';\n    return Promise.reject();\n  }\n\n  return fetch('https://x8ki-letl-twmt.n7.xano.io/api:WyQO-hFi/auth/me', {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n      // if .page-wrapper has the attribute gated\n      const pageWrapper = document.querySelector('.page-wrapper') as HTMLElement;\n      const isGated = pageWrapper && pageWrapper.hasAttribute('gatedContent');\n\n      if (isGated) {\n        // redirect to login page\n        window.location.href = '/login';\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('profile');\n        localStorage.removeItem('role');\n      }\n    });\n}\n", "//addStudentPageLoad - From Guardian Account\nexport async function addStudentOnLoad() {\n  try {\n    const response = await fetch(\n      'https://x8ki-letl-twmt.n7.xano.io/api:2gnTJ2I8/student_profiles',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    // Process the response\n    if (!response.ok) {\n      const responseData = await response.json();\n      const submitError = document.getElementById('submitError') as HTMLDivElement;\n      // If error display the message\n      if (submitError) {\n        submitError.style.display = 'block';\n        submitError.textContent = responseData.message || 'An error occurred';\n      }\n    } else {\n      //save studentID to variable\n      const responseData = await response.json();\n      localStorage.setItem('studentID', responseData.id);\n      //console.log(responseData);\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n  }\n}\n\n// get all Student Profiles FOR CARDS From Guardian Account\nexport async function getStudentProfiles() {\n  const profileString = localStorage.getItem('profile');\n  const profile = profileString ? JSON.parse(profileString) : null;\n  const guardianUserID = profile ? profile.userID : null;\n  interface StudentProfile {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    image: { url: string };\n  }\n\n  if (!guardianUserID) {\n    // Handle the case when userID is not found in localStorage\n    return;\n  }\n\n  const loadingAnimation = document.getElementById('loadingAnimation') as HTMLDivElement;\n\n  try {\n    loadingAnimation.style.display = 'block';\n\n    const response = await fetch(\n      `https://x8ki-letl-twmt.n7.xano.io/api:2gnTJ2I8/student_profiles?guardianUserID=${guardianUserID}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      const responseData = await response.json();\n      alert(responseData.message || 'An error occurred');\n    } else {\n      const responseData: { allStudentProfiles: StudentProfile[] } = await response.json();\n      if (responseData.allStudentProfiles.length > 0) {\n        const studentList = document.getElementById('studentList') as HTMLDivElement;\n        const studentCardTemplate = document.getElementById('studentCard') as HTMLDivElement;\n        const studentListWrapper = document.getElementById('studentListWrapper') as HTMLDivElement;\n\n        // For each student profile, clone the template, fill in the data and append to the list\n        responseData.allStudentProfiles.forEach((studentProfile) => {\n          const clonedTemplate = studentCardTemplate.cloneNode(true) as HTMLDivElement;\n          const studentNameElement = clonedTemplate.querySelector('#studentNameList');\n          const studentEmailElement = clonedTemplate.querySelector('#studentEmailList');\n          const studentPhoneElement = clonedTemplate.querySelector('#studentPhoneList');\n          const studentImageElement = clonedTemplate.querySelector(\n            '#studentImageList'\n          ) as HTMLImageElement;\n\n          if (studentNameElement)\n            studentNameElement.textContent =\n              studentProfile.firstName + ' ' + studentProfile.lastName;\n          if (studentEmailElement) studentEmailElement.textContent = studentProfile.email;\n          if (studentPhoneElement) studentPhoneElement.textContent = studentProfile.phone;\n          if (studentImageElement && studentProfile.image) {\n            studentImageElement.src = studentProfile.image.url;\n          }\n          studentList.append(clonedTemplate);\n        });\n\n        studentCardTemplate.style.display = 'none';\n        studentList.style.display = 'block';\n\n        setTimeout(() => {\n          studentListWrapper.style.width = '28rem';\n        }, 0); // start as soon as possible\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n    loadingAnimation.style.display = 'none';\n  }\n}\n\n// Update Student Profile - From Guardian account\nexport async function updateStudentProfile() {\n  const studentId = localStorage.getItem('studentID');\n\n  const profileString = localStorage.getItem('profile');\n  if (!profileString || !studentId) {\n    // Handle the case when studentId or profile is not found in localStorage\n    return;\n  }\n\n  const profile = JSON.parse(profileString);\n  const { userID } = profile;\n\n  const loadingAnimation = document.getElementById('loadingAnimation') as HTMLDivElement;\n  loadingAnimation.style.display = 'block';\n\n  const studentInfo = {\n    firstName: (document.getElementById('firstNameInput') as HTMLInputElement).value,\n    lastName: (document.getElementById('lastNameInput') as HTMLInputElement).value,\n    email: (document.getElementById('emailInput') as HTMLInputElement).value,\n    phone: (document.getElementById('phoneInput') as HTMLInputElement).value,\n    dob: (document.getElementById('dobInput') as HTMLInputElement).value,\n    gender: (document.getElementById('genderInput') as HTMLInputElement).value,\n    ethnicity: (document.getElementById('ethnicityInput') as HTMLInputElement).value,\n    health: (document.getElementById('healthInput') as HTMLInputElement).value,\n    additionalName: (document.getElementById('additionalName') as HTMLInputElement).value,\n    additionalEmail: (document.getElementById('additionalEmail') as HTMLInputElement).value,\n    additionalPhone: (document.getElementById('additionalPhone') as HTMLInputElement).value,\n    emergencyContact: (document.getElementById('emergencyContact') as HTMLInputElement).value,\n    dismissal: (document.getElementById('dismissal') as HTMLInputElement).value,\n    family: (document.getElementById('family') as HTMLInputElement).value,\n    grade: (document.getElementById('gradeInput') as HTMLInputElement).value,\n    school: (document.getElementById('schoolInput') as HTMLInputElement).value,\n    //info: (document.getElementById('infoInput') as HTMLInputElement).value,\n    sendTexts: (document.getElementById('sendTexts') as HTMLInputElement).checked,\n    photoRelease: (document.getElementById('photoRelease') as HTMLInputElement).checked,\n    independentTravel: (document.getElementById('independentTravel') as HTMLInputElement).checked,\n    studentID: studentId,\n    guardianUserID: userID, // accountID corresponds to userID in profile object\n  };\n\n  try {\n    const response = await fetch(\n      `https://x8ki-letl-twmt.n7.xano.io/api:2gnTJ2I8/student_profiles/${studentId}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(studentInfo),\n      }\n    );\n\n    if (!response.ok) {\n      const responseData = await response.json();\n      const submitError = document.getElementById('submitError') as HTMLDivElement;\n\n      if (submitError) {\n        if (\n          responseData.message ===\n          'Duplicate record detected. Please check your input and try again.'\n        ) {\n          submitError.textContent =\n            'A user with that email already exists. If your student doesn\u2019t have their own email, please leave blank';\n        } else {\n          submitError.textContent = responseData.message || 'An error occurred';\n        }\n        // Show the error message\n        submitError.style.display = 'block';\n        loadingAnimation.style.display = 'none';\n      }\n    } else {\n      const studentProfile = await response.json();\n      // hide error message\n      const submitError = document.getElementById('submitError') as HTMLDivElement;\n      submitError.style.display = 'none';\n      // display success message\n      const successMessage = document.getElementById('successMessage') as HTMLDivElement;\n      successMessage.style.display = 'flex';\n      //hide form\n      const form = document.getElementById('addStudentContainer') as HTMLFormElement;\n      form.style.display = 'none';\n      //scroll to top of page automatically\n      window.scrollTo(0, 0);\n      //console.log(studentProfile);\n      const studentName = document.getElementById('studentName') as HTMLDivElement;\n      studentName.textContent = `${studentProfile.studentProfile.firstName} ${studentProfile.studentProfile.lastName}`;\n\n      const studentEmail = document.getElementById('studentEmail') as HTMLDivElement;\n      studentEmail.textContent = studentProfile.studentProfile.email;\n\n      const studentPhone = document.getElementById('studentPhone') as HTMLDivElement;\n      studentPhone.textContent = studentProfile.studentProfile.phone;\n\n      const studentImage = document.getElementById('studentImage') as HTMLImageElement;\n      if (studentProfile.studentProfile.image && studentProfile.studentProfile.image.url) {\n        studentImage.src = studentProfile.studentProfile.image.url;\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Student Dashboard Request\nexport async function getStudentsDashboard() {\n  const profileString = localStorage.getItem('profile');\n  const profile = profileString ? JSON.parse(profileString) : null;\n  const guardianUserID = profile ? profile.userID : null;\n\n  interface StudentProfile {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    image: { url: string };\n    airtableID: string;\n  }\n\n  if (!guardianUserID) {\n    // Handle the case when userID is not found in localStorage\n    return;\n  }\n\n  const loadingAnimation = document.getElementById('loadingAnimation') as HTMLDivElement;\n  const studentList = document.getElementById('studentList') as HTMLDivElement;\n  const noStudents = document.getElementById('noStudents') as HTMLDivElement;\n\n  try {\n    loadingAnimation.style.display = 'block';\n\n    const response = await fetch(\n      `https://x8ki-letl-twmt.n7.xano.io/api:2gnTJ2I8/student_profiles?guardianUserID=${guardianUserID}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      const responseData = await response.json();\n      alert(responseData.message || 'An error occurred');\n    } else {\n      const responseData: { allStudentProfiles: StudentProfile[] } = await response.json();\n      if (responseData.allStudentProfiles.length > 0) {\n        // Clear the studentList\n        studentList.innerHTML = '';\n\n        const studentCardTemplate = document.getElementById('studentCard') as HTMLAnchorElement;\n\n        // For each student profile, clone the template, fill in the data and append to the list\n        responseData.allStudentProfiles.forEach((studentProfile) => {\n          const clonedTemplate = studentCardTemplate.cloneNode(true) as HTMLAnchorElement;\n          const studentNameElement = clonedTemplate.querySelector('#studentNameList');\n          const studentEmailElement = clonedTemplate.querySelector('#studentEmailList');\n          const studentPhoneElement = clonedTemplate.querySelector('#studentPhoneList');\n          const studentImageElement = clonedTemplate.querySelector(\n            '#studentImageList'\n          ) as HTMLImageElement;\n\n          if (studentNameElement)\n            studentNameElement.textContent =\n              studentProfile.firstName + ' ' + studentProfile.lastName;\n          if (studentEmailElement) studentEmailElement.textContent = studentProfile.email;\n          if (studentPhoneElement) studentPhoneElement.textContent = studentProfile.phone;\n          if (studentImageElement && studentProfile.image) {\n            studentImageElement.src = studentProfile.image.url;\n          }\n\n          // Update the link's href attribute with the student's airtableID\n          clonedTemplate.href = `/my-account/student-profile?student=${studentProfile.airtableID}`;\n\n          studentList.append(clonedTemplate);\n        });\n\n        studentCardTemplate.style.display = 'none';\n        studentList.style.display = 'grid';\n        noStudents.style.display = 'none';\n      } else {\n        // If no student profiles found, hide the studentList and display the #noStudents div\n        studentList.style.display = 'none';\n        noStudents.style.display = 'flex';\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n    loadingAnimation.style.display = 'none';\n  }\n}\n", "//Guardian Image Upload\n\nexport function uploadGuardianImage(inputElement: HTMLInputElement) {\n  inputElement.addEventListener('change', async () => {\n    const profileImage = document.getElementById('profileImage') as HTMLImageElement;\n    const fileError = document.getElementById('fileError') as HTMLDivElement;\n    const fileUploaded = document.getElementById('fileUploaded') as HTMLDivElement;\n    const loadingImageAnimation = document.getElementById(\n      'loadingImageAnimation'\n    ) as HTMLDivElement;\n    const selectedImage = inputElement.files?.[0];\n\n    if (selectedImage) {\n      if (selectedImage.size > 2 * 1024 * 1024) {\n        fileError.textContent = 'File size must be less than 2MB';\n        fileError.style.display = 'block';\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = async () => {\n        profileImage.src = reader.result as string;\n\n        fileError.textContent = '';\n        fileError.style.display = 'none';\n\n        // Show loading animation\n        loadingImageAnimation.style.display = 'flex';\n\n        try {\n          // Get the profile object from localStorage\n          const profileString = localStorage.getItem('profile');\n          const profile = profileString ? JSON.parse(profileString) : null;\n          const guardianID = profile ? profile.id : null;\n\n          // Send the base64 string and guardianID to the endpoint\n          const response = await fetch(\n            'https://x8ki-letl-twmt.n7.xano.io/api:2gnTJ2I8/guardianImages',\n            {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                guardianID,\n                guardianImage: reader.result,\n              }),\n            }\n          );\n\n          // Check if the request was successful\n          if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n          } else {\n            // Handle the response data accordingly\n            fileUploaded.style.display = 'block';\n          }\n        } catch (error) {\n          // Display the error message in the fileError div\n          fileError.textContent = (error as Error).message;\n          fileError.style.display = 'block';\n        } finally {\n          // Hide loading animation\n          loadingImageAnimation.style.display = 'none';\n        }\n      };\n\n      reader.readAsDataURL(selectedImage);\n    } else {\n      profileImage.src =\n        'https://assets.website-files.com/64404db37a2b832b7d5aa9f8/64404db37a2b831d465aaa01_image.svg';\n      fileError.textContent = '';\n      fileError.style.display = 'none';\n    }\n  });\n}\n\n//Student Image Upload\n\nexport function uploadStudentImage(inputElement: HTMLInputElement) {\n  inputElement.addEventListener('change', async () => {\n    const profileImage = document.getElementById('profileImage') as HTMLImageElement;\n    const fileError = document.getElementById('fileError') as HTMLDivElement;\n    const fileUploaded = document.getElementById('fileUploaded') as HTMLDivElement;\n    const loadingImageAnimation = document.getElementById(\n      'loadingImageAnimation'\n    ) as HTMLDivElement;\n    const selectedImage = inputElement.files?.[0];\n\n    if (selectedImage) {\n      if (selectedImage.size > 2 * 1024 * 1024) {\n        fileError.textContent = 'File size must be less than 2MB';\n        fileError.style.display = 'block';\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = async () => {\n        profileImage.src = reader.result as string;\n\n        fileError.textContent = '';\n        fileError.style.display = 'none';\n\n        // Show loading animation\n        loadingImageAnimation.style.display = 'flex';\n\n        try {\n          // Get the studentID from localStorage\n          const studentID = localStorage.getItem('studentID');\n\n          // Send the base64 string and studentID to the endpoint\n          const response = await fetch(\n            'https://x8ki-letl-twmt.n7.xano.io/api:2gnTJ2I8/studentImages',\n            {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                studentID,\n                studentImage: reader.result,\n              }),\n            }\n          );\n\n          // Check if the request was successful\n          if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n          } else {\n            // Handle the response data accordingly\n            fileUploaded.style.display = 'block';\n          }\n        } catch (error) {\n          // Display the error message in the fileError div\n          fileError.textContent = (error as Error).message;\n          fileError.style.display = 'block';\n        } finally {\n          // Hide loading animation\n          loadingImageAnimation.style.display = 'none';\n        }\n      };\n\n      reader.readAsDataURL(selectedImage);\n    } else {\n      profileImage.src =\n        'https://assets.website-files.com/64404db37a2b832b7d5aa9f8/64404db37a2b831d465aaa01_image.svg';\n      fileError.textContent = '';\n      fileError.style.display = 'none';\n    }\n  });\n}\n", "// Validate First Name Input\nconst firstNameInput = document.getElementById('firstNameInput') as HTMLInputElement;\nconst firstNameError = document.getElementById('firstNameError') as HTMLDivElement;\n\nexport function validateFirstName() {\n  const isRequired = firstNameInput.hasAttribute('required');\n  if (isRequired && firstNameInput.value.trim() === '') {\n    firstNameError.textContent = 'First name required';\n    firstNameError.style.display = 'block';\n    firstNameInput.classList.add('error');\n    return false;\n  }\n  firstNameError.textContent = '';\n  firstNameError.style.display = 'none';\n  firstNameInput.classList.remove('error');\n  return true;\n}\n\nif (firstNameInput) {\n  firstNameInput.addEventListener('blur', validateFirstName);\n}\n\n// Validate Last Name Input\nconst lastNameInput = document.getElementById('lastNameInput') as HTMLInputElement;\nconst lastNameError = document.getElementById('lastNameError') as HTMLDivElement;\n\nexport function validateLastName() {\n  const isRequired = lastNameInput.hasAttribute('required');\n  if (isRequired && lastNameInput.value.trim() === '') {\n    lastNameError.textContent = 'Last name required';\n    lastNameError.style.display = 'block';\n    lastNameInput.classList.add('error');\n    return false;\n  }\n  lastNameError.textContent = '';\n  lastNameError.style.display = 'none';\n  lastNameInput.classList.remove('error');\n  return true;\n}\n\nif (lastNameInput) {\n  lastNameInput.addEventListener('blur', validateLastName);\n}\n\n// Validate Email Input\nconst emailInput = document.getElementById('emailInput') as HTMLInputElement;\nconst emailError = document.getElementById('emailError') as HTMLDivElement;\n\nexport function validateEmail() {\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n  if (emailInput.hasAttribute('required') && emailInput.value.trim() === '') {\n    emailError.textContent = 'Email is required';\n    emailError.style.display = 'block';\n    emailInput.classList.add('error');\n    return false;\n  }\n  if (emailInput.value.trim() !== '' && !emailRegex.test(emailInput.value)) {\n    emailError.textContent = 'Please enter a valid email';\n    emailError.style.display = 'block';\n    emailInput.classList.add('error');\n    return false;\n  }\n  emailError.textContent = '';\n  emailError.style.display = 'none';\n  emailInput.classList.remove('error');\n  return true;\n}\n\nif (emailInput) {\n  emailInput.addEventListener('blur', validateEmail);\n}\n\n// Validate Phone Input\nconst phoneInput = document.getElementById('phoneInput') as HTMLInputElement;\nconst phoneError = document.getElementById('phoneError') as HTMLDivElement;\n\nexport function formatPhoneNumber(value: string) {\n  const phoneNumber = value.replace(/\\D/g, '');\n  if (phoneNumber.length === 0) {\n    return '';\n  }\n  if (phoneNumber.length < 4) {\n    return `(${phoneNumber}`;\n  }\n  if (phoneNumber.length < 7) {\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n  }\n  return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n}\n\nexport function validatePhone() {\n  const phoneRegex = /^\\D*(\\d{3})\\D*\\D*(\\d{3})\\D*(\\d{4})\\D*$/;\n  const isRequired = phoneInput.required;\n  if (isRequired && phoneInput.value.trim() === '') {\n    phoneError.textContent = 'Phone is required';\n    phoneError.style.display = 'block';\n    phoneInput.classList.add('error');\n    return false;\n  }\n  if (phoneInput.value.trim() !== '' && !phoneRegex.test(phoneInput.value)) {\n    phoneError.textContent = 'Please enter a valid phone number';\n    phoneError.style.display = 'block';\n    phoneInput.classList.add('error');\n    return false;\n  }\n  phoneInput.value = formatPhoneNumber(phoneInput.value);\n  phoneError.textContent = '';\n  phoneError.style.display = 'none';\n  phoneInput.classList.remove('error');\n  return true;\n}\nif (phoneInput) {\n  phoneInput.addEventListener('input', (event) => {\n    const input = event.target as HTMLInputElement;\n    input.value = formatPhoneNumber(input.value);\n    validatePhone();\n  });\n}\n\n//validate DOB\nconst dobInput = document.getElementById('dobInput') as HTMLInputElement;\nconst dobError = document.getElementById('dobError') as HTMLDivElement;\n\nexport function validateDOB() {\n  if (dobInput.hasAttribute('required') && dobInput.value.trim() === '') {\n    dobError.textContent = 'Date of Birth is required';\n    dobError.style.display = 'block';\n    dobInput.classList.add('error');\n    return false;\n  }\n  dobError.textContent = '';\n  dobError.style.display = 'none';\n  dobInput.classList.remove('error');\n  return true;\n}\n\nif (dobInput) {\n  dobInput.addEventListener('blur', validateDOB);\n}\n\n//validate gender\nconst genderInput = document.getElementById('genderInput') as HTMLInputElement;\nconst genderError = document.getElementById('genderError') as HTMLDivElement;\n\nexport function validateGender() {\n  if (genderInput.hasAttribute('required') && genderInput.value.trim() === '') {\n    genderError.textContent = 'Gender is required';\n    genderError.style.display = 'block';\n    genderInput.classList.add('error');\n    return false;\n  }\n  genderError.textContent = '';\n  genderError.style.display = 'none';\n  genderInput.classList.remove('error');\n  return true;\n}\n\nif (genderInput) {\n  genderInput.addEventListener('blur', validateGender);\n}\n\n// validate school name\nconst schoolInput = document.getElementById('schoolInput') as HTMLInputElement;\nconst schoolError = document.getElementById('schoolError') as HTMLDivElement;\n\nexport function validateSchool() {\n  if (schoolInput.hasAttribute('required') && schoolInput.value.trim() === '') {\n    schoolError.textContent = 'School name is required';\n    schoolError.style.display = 'block';\n    schoolInput.classList.add('error');\n    return false;\n  }\n  schoolError.textContent = '';\n  schoolError.style.display = 'none';\n  schoolInput.classList.remove('error');\n  return true;\n}\n\nif (schoolInput) {\n  schoolInput.addEventListener('blur', validateSchool);\n}\n\n// validate grade\nconst gradeInput = document.getElementById('gradeInput') as HTMLInputElement;\nconst gradeError = document.getElementById('gradeError') as HTMLDivElement;\n\nexport function validateGrade() {\n  if (gradeInput.hasAttribute('required') && gradeInput.value.trim() === 'N/A') {\n    gradeError.textContent = 'Grade is required';\n    gradeError.style.display = 'block';\n    gradeInput.classList.add('error');\n    return false;\n  }\n  gradeError.textContent = '';\n  gradeError.style.display = 'none';\n  gradeInput.classList.remove('error');\n  return true;\n}\n\nif (gradeInput) {\n  gradeInput.addEventListener('blur', validateGrade);\n}\n\n// validate ethnicity\nconst ethnicityInput = document.getElementById('ethnicityInput') as HTMLInputElement;\nconst ethnicityError = document.getElementById('ethnicityError') as HTMLDivElement;\n\nexport function validateEthnicity() {\n  if (ethnicityInput.hasAttribute('required') && ethnicityInput.value.trim() === '') {\n    ethnicityError.textContent = 'Ethnicity is required';\n    ethnicityError.style.display = 'block';\n    ethnicityInput.classList.add('error');\n    return false;\n  }\n  ethnicityError.textContent = '';\n  ethnicityError.style.display = 'none';\n  ethnicityError.classList.remove('error');\n  return true;\n}\n\nif (ethnicityError) {\n  ethnicityInput.addEventListener('blur', validateEthnicity);\n}\n\n// validate health input\nconst healthInput = document.getElementById('healthInput') as HTMLInputElement;\nconst healthError = document.getElementById('healthError') as HTMLDivElement;\n\nexport function validateHealth() {\n  if (healthInput.hasAttribute('required') && healthInput.value.trim() === '') {\n    healthError.textContent = 'This field is required';\n    healthError.style.display = 'block';\n    healthInput.classList.add('error');\n    return false;\n  }\n  healthError.textContent = '';\n  healthError.style.display = 'none';\n  healthInput.classList.remove('error');\n  return true;\n}\n\nif (healthInput) {\n  healthInput.addEventListener('blur', validateHealth);\n}\n\n// validate emergency contact\nconst emergencyInput = document.getElementById('emergencyContact') as HTMLInputElement;\nconst emergencyError = document.getElementById('emergencyError') as HTMLDivElement;\n\nexport function validateEmergency() {\n  if (emergencyInput.hasAttribute('required') && emergencyInput.value.trim() === '') {\n    emergencyError.textContent = 'This field is required';\n    emergencyError.style.display = 'block';\n    emergencyInput.classList.add('error');\n    return false;\n  }\n  emergencyError.textContent = '';\n  emergencyError.style.display = 'none';\n  emergencyInput.classList.remove('error');\n  return true;\n}\n\nif (emergencyInput) {\n  emergencyInput.addEventListener('blur', validateEmergency);\n}\n\n// validate dismissal\nconst dismissal = document.getElementById('dismissal') as HTMLInputElement;\nconst dismissalError = document.getElementById('dismissalError') as HTMLDivElement;\n\nexport function validateDismissal() {\n  if (dismissal.hasAttribute('required') && dismissal.value.trim() === '') {\n    dismissalError.textContent = 'This field is required';\n    dismissalError.style.display = 'block';\n    dismissal.classList.add('error');\n    return false;\n  }\n  dismissalError.textContent = '';\n  dismissalError.style.display = 'none';\n  dismissal.classList.remove('error');\n  return true;\n}\n\nif (dismissal) {\n  dismissal.addEventListener('blur', validateDismissal);\n}\n\n// Validate Additional Email\nconst additionalEmail = document.getElementById('additionalEmail') as HTMLInputElement;\nconst additionalEmailError = document.getElementById('additionalEmailError') as HTMLDivElement;\n\nexport function validateAdditionalEmail() {\n  const additionalEmailRegex = /^\\S+@\\S+\\.\\S+$/;\n  if (additionalEmail.hasAttribute('required') && additionalEmail.value.trim() === '') {\n    additionalEmailError.textContent = 'Email is required';\n    additionalEmailError.style.display = 'block';\n    additionalEmail.classList.add('error');\n    return false;\n  }\n  if (additionalEmail.value.trim() !== '' && !additionalEmailRegex.test(additionalEmail.value)) {\n    additionalEmailError.textContent = 'Please enter a valid email';\n    additionalEmailError.style.display = 'block';\n    additionalEmail.classList.add('error');\n    return false;\n  }\n  additionalEmailError.textContent = '';\n  additionalEmailError.style.display = 'none';\n  additionalEmail.classList.remove('error');\n  return true;\n}\n\nif (additionalEmail) {\n  additionalEmail.addEventListener('blur', validateAdditionalEmail);\n}\n\n// Validate interestInput\nconst interestInput = document.getElementById('interestInput') as HTMLInputElement;\nconst interestError = document.getElementById('interestError') as HTMLDivElement;\n\nexport function validateInterest() {\n  if (interestInput.hasAttribute('required') && interestInput.value.trim() === '') {\n    interestError.textContent = 'This field is required';\n    interestError.style.display = 'block';\n    interestInput.classList.add('error');\n    return false;\n  }\n  interestError.textContent = '';\n  interestError.style.display = 'none';\n  interestInput.classList.remove('error');\n  return true;\n}\n\nif (interestInput) {\n  interestInput.addEventListener('blur', validateInterest);\n}\n", "// authenticate user on page load\nimport { authenticate } from './utils/requests/auth/authenticateUser';\nauthenticate();\n// Import addStudentOnLoad and getStudentProfiles function\nimport { addStudentOnLoad, getStudentProfiles } from './utils/requests/studentRequests';\n\n//on page load look for student profiles\ngetStudentProfiles();\n\n// On page load add student record to student_profiles table\naddStudentOnLoad();\n\n// Import and use the addFileUploadListener function from utils/imageUpload.ts\nimport { uploadStudentImage } from './utils/forms/imageUpload';\nconst imageUploadInput = document.getElementById('imageUpload') as HTMLInputElement;\nuploadStudentImage(imageUploadInput);\n\n// Import inputValidation functions\nimport {\n  validateAdditionalEmail,\n  validateDismissal,\n  validateDOB,\n  validateEmail,\n  validateEmergency,\n  validateEthnicity,\n  validateFirstName,\n  validateGender,\n  validateGrade,\n  validateHealth,\n  validateLastName,\n  validatePhone,\n  validateSchool,\n} from './utils/forms/inputValidation';\n\n// Use event listeners to call all the inputValidation functions when a user interacts with an input element.\nconst firstNameInput = document.getElementById('firstNameInput');\nif (firstNameInput) firstNameInput.addEventListener('input', validateFirstName);\n\nconst lastNameInput = document.getElementById('lastNameInput');\nif (lastNameInput) lastNameInput.addEventListener('input', validateLastName);\n\nconst emailInput = document.getElementById('emailInput');\nif (emailInput) emailInput.addEventListener('input', validateEmail);\n\nconst phoneInput = document.getElementById('phoneInput');\nif (phoneInput) phoneInput.addEventListener('input', validatePhone);\n\nconst dobInput = document.getElementById('dobInput');\nif (dobInput) dobInput.addEventListener('input', validateDOB);\n\nconst genderInput = document.getElementById('genderInput');\nif (genderInput) genderInput.addEventListener('input', validateGender);\n\nconst schoolInput = document.getElementById('schoolInput');\nif (schoolInput) schoolInput.addEventListener('input', validateSchool);\n\nconst gradeInput = document.getElementById('gradeInput');\nif (gradeInput) gradeInput.addEventListener('input', validateGrade);\n\nconst ethnicityInput = document.getElementById('ethnicityInput');\nif (ethnicityInput) ethnicityInput.addEventListener('input', validateEthnicity);\n\nconst healthInput = document.getElementById('healthInput');\nif (healthInput) healthInput.addEventListener('input', validateHealth);\n\nconst emergencyInput = document.getElementById('emergencyContact');\nif (emergencyInput) emergencyInput.addEventListener('input', validateEmergency);\n\nconst dismissal = document.getElementById('dismissal');\nif (dismissal) dismissal.addEventListener('input', validateDismissal);\n\nconst additionalEmail = document.getElementById('additionalEmail');\nif (additionalEmail) additionalEmail.addEventListener('input', validateAdditionalEmail);\n\n// Get all toggle switches\nconst toggleSwitches = document.querySelectorAll<HTMLInputElement>(\n  '.switch input[type=\"checkbox\"]'\n);\n\n// Add click event listener to each toggle switch\ntoggleSwitches.forEach(function (switchInput) {\n  switchInput.addEventListener('click', function () {\n    // Toggle the 'checked' class on the parent slider element\n    const parentNode = this.parentNode as HTMLElement;\n    parentNode.classList.toggle('checked');\n\n    // Get the toggle text element\n    const toggleText = parentNode.querySelector('.toggle-text') as HTMLElement | null;\n\n    // Check if the toggle text element exists\n    if (toggleText) {\n      // Update the toggle text based on the toggle switch state\n      if (this.checked) {\n        toggleText.textContent = 'Yes';\n      } else {\n        toggleText.textContent = 'No';\n      }\n    }\n  });\n});\n\n// if additionalCare is checked set #additionalOverflow to 20rem height\nconst additionalCare = document.getElementById('additionalCare') as HTMLInputElement;\nconst additionalOverflow = document.getElementById('additionalOverflow') as HTMLDivElement;\nadditionalCare.addEventListener('click', () => {\n  if (additionalCare.checked) {\n    additionalOverflow.style.height = '32rem';\n  } else {\n    additionalOverflow.style.height = '0';\n  }\n});\n\n//if familyToggle is checked set #familyOverflow to 12rem height\nconst familyToggle = document.getElementById('familyToggle') as HTMLInputElement;\nconst familyOverflow = document.getElementById('familyOverflow') as HTMLDivElement;\nfamilyToggle.addEventListener('click', () => {\n  if (familyToggle.checked) {\n    familyOverflow.style.height = '12rem';\n  } else {\n    familyOverflow.style.height = '0';\n  }\n});\n\n//import updateStudentProfile function\nimport { updateStudentProfile } from './utils/requests/studentRequests';\n\n// prevent form submit button from submitting form if any input is invalid\nconst submitButton = document.getElementById('submitButton') as HTMLButtonElement;\nsubmitButton.addEventListener('click', (e) => {\n  if (\n    !validateFirstName() ||\n    !validateLastName() ||\n    !validateEmail() ||\n    !validatePhone() ||\n    !validateDOB() ||\n    !validateGender() ||\n    !validateSchool() ||\n    !validateGrade() ||\n    !validateEthnicity() ||\n    !validateHealth() ||\n    !validateEmergency() ||\n    !validateDismissal() ||\n    !validateAdditionalEmail\n  ) {\n    e.preventDefault();\n    //display error message\n    const submitError = document.getElementById('submitError') as HTMLDivElement;\n    submitError.style.display = 'block';\n    submitError.textContent = 'Please make sure you have entered all fields correctly.';\n  } else {\n    e.preventDefault();\n    updateStudentProfile();\n  }\n});\n\n//when a user clicks the button with the id of studentContinue check if redirectURL is set in localStorage\n//if redirectURL is set and the profile object in local storage contains phoneNumber that is not null redirect to redirectURL\n//if redirectURL is not set or the profile object in local storage does not contain phoneNumber that is not null redirect to /create-account/account-details\nconst studentContinue = document.getElementById('studentContinue') as HTMLButtonElement;\nstudentContinue.addEventListener('click', () => {\n  if (localStorage.getItem('redirectURL')) {\n    const profile = JSON.parse(localStorage.getItem('profile') as string);\n    if (profile.phoneNumber) {\n      window.location.href = localStorage.getItem('redirectURL') as string;\n    } else {\n      window.location.href = '/create-account/account-details';\n    }\n  } else {\n    window.location.href = '/create-account/account-details';\n  }\n});\n"],
  "mappings": "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",
  "names": ["firstNameInput", "lastNameInput", "emailInput", "phoneInput", "dobInput", "genderInput", "schoolInput", "gradeInput", "ethnicityInput", "healthInput", "emergencyInput", "dismissal", "additionalEmail"]
}
