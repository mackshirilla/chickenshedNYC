{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/ticketPurchase.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "interface FormInputData {\n  performanceDate: string;\n  performanceTime: string;\n  performanceName: string;\n  performanceID: string;\n  successURL: string;\n  cancelURL: string;\n  assistanceMessage?: string;\n  checkoutCategory: string;\n  needsAssistance: 'true' | 'false';\n  userID: string;\n  sendGridFollowUpID: string;\n  sendGridContactList: string;\n  childrenAttending: string;\n}\n\ninterface LineItem {\n  price: string;\n  quantity: number;\n}\n\ninterface CheckoutSessionData {\n  success_url: string;\n  cancel_url: string;\n  line_items: LineItem[];\n  metadata: FormInputData;\n}\n\nconst submitButton = document.getElementById('submitButton');\nif (submitButton) {\n  submitButton.addEventListener('click', handleFormSubmit);\n}\n\nconst toggleSwitch = document.getElementById('needsAssistance') as HTMLInputElement;\ntoggleSwitch.addEventListener('change', handleToggleSwitchChange);\n\nfunction handleFormSubmit(event: Event) {\n  event.preventDefault();\n\n  const needsAssistanceCheckbox = document.getElementById('needsAssistance') as HTMLInputElement;\n\n  const formData: FormInputData = {\n    performanceDate: (document.getElementById('performanceDate') as HTMLInputElement).value,\n    performanceTime: (document.getElementById('performanceTime') as HTMLInputElement).value,\n    performanceName: (document.getElementById('performanceName') as HTMLInputElement).value,\n    performanceID: (document.getElementById('performanceID') as HTMLInputElement).value,\n    successURL: (document.getElementById('successURL') as HTMLInputElement).value,\n    cancelURL: window.location.href,\n    assistanceMessage: (document.getElementById('assistanceMessage') as HTMLInputElement).value,\n    checkoutCategory: 'ticket',\n    needsAssistance: needsAssistanceCheckbox.checked ? 'true' : 'false',\n    userID: '',\n    sendGridFollowUpID: (document.getElementById('sendGridFollowUpID') as HTMLInputElement).value,\n    sendGridContactList: (document.getElementById('sendGridContactList') as HTMLInputElement).value,\n    childrenAttending: (document.getElementById('childrenAttending') as HTMLInputElement).value,\n  };\n\n  // Retrieve profile data from local storage if available\n  const profileData = localStorage.getItem('profile');\n  if (profileData) {\n    const profile = JSON.parse(profileData);\n    if (profile && typeof profile.userID === 'number') {\n      formData.userID = profile.userID.toString();\n    }\n  }\n\n  const lineItems: LineItem[] = [];\n  let hasSelectedTicket = false;\n\n  const ticketInputs = document.querySelectorAll<HTMLInputElement>(\n    'input[fs-inputcounter-element^=\"input\"]'\n  );\n  ticketInputs.forEach((input) => {\n    const quantity = parseInt(input.value);\n    if (quantity > 0) {\n      const price = input.getAttribute('priceid');\n      if (price) {\n        lineItems.push({ price, quantity });\n        hasSelectedTicket = true;\n      }\n    }\n  });\n\n  const errorMessage = document.getElementById('errorMessage');\n  if (errorMessage) {\n    if (!hasSelectedTicket) {\n      errorMessage.textContent = 'Please select a ticket tier.';\n      errorMessage.style.display = 'block';\n      return;\n    }\n    errorMessage.style.display = 'none';\n  }\n\n  const loadingWrapper = document.getElementById('loadingWrapper');\n  if (loadingWrapper) {\n    loadingWrapper.style.display = 'block';\n  }\n\n  const checkoutSessionData: CheckoutSessionData = {\n    success_url: formData.successURL,\n    cancel_url: formData.cancelURL,\n    line_items: lineItems,\n    metadata: {\n      ...formData,\n      assistanceMessage: formData.assistanceMessage || '',\n    },\n  };\n\n  const request = new XMLHttpRequest();\n  request.open('POST', 'https://xszy-vp96-kdkh.n7c.xano.io/api:lRsgmoHt/sessions');\n  request.setRequestHeader('Content-Type', 'application/json');\n\n  request.onreadystatechange = function () {\n    if (request.readyState === XMLHttpRequest.DONE) {\n      if (request.status === 200) {\n        const response = JSON.parse(request.responseText);\n        if (response && response.id) {\n          window.location.href = response.url; // Navigate to Stripe Checkout URL\n        } else {\n          if (errorMessage) {\n            errorMessage.textContent = 'Invalid response received from server.';\n            errorMessage.style.display = 'block';\n          }\n        }\n      } else {\n        const errorResponse = JSON.parse(request.responseText);\n        if (errorMessage) {\n          errorMessage.textContent = errorResponse.message || 'An error occurred.';\n          errorMessage.style.display = 'block';\n        }\n      }\n      if (loadingWrapper) {\n        loadingWrapper.style.display = 'none';\n      }\n    }\n  };\n\n  request.send(JSON.stringify(checkoutSessionData));\n}\n\nfunction handleToggleSwitchChange() {\n  const toggleText = document.querySelector('.toggle-text');\n  if (toggleSwitch.checked) {\n    toggleText.textContent = 'Yes';\n  } else {\n    toggleText.textContent = 'No';\n  }\n\n  const messageWrapper = document.getElementById('messageWrapper');\n  if (messageWrapper) {\n    if (toggleSwitch.checked) {\n      messageWrapper.style.height = '12rem';\n    } else {\n      messageWrapper.style.height = '';\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
