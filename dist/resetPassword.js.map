{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/forms/inputValidation.ts", "../src/resetPassword.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Validate First Name Input\nconst firstNameInput = document.getElementById('firstNameInput') as HTMLInputElement;\nconst firstNameError = document.getElementById('firstNameError') as HTMLDivElement;\n\nexport function validateFirstName() {\n  const isRequired = firstNameInput.hasAttribute('required');\n  if (isRequired && firstNameInput.value.trim() === '') {\n    firstNameError.textContent = 'First name required';\n    firstNameError.style.display = 'block';\n    firstNameInput.classList.add('error');\n    return false;\n  }\n  firstNameError.textContent = '';\n  firstNameError.style.display = 'none';\n  firstNameInput.classList.remove('error');\n  return true;\n}\n\nif (firstNameInput) {\n  firstNameInput.addEventListener('blur', validateFirstName);\n}\n\n// Validate Last Name Input\nconst lastNameInput = document.getElementById('lastNameInput') as HTMLInputElement;\nconst lastNameError = document.getElementById('lastNameError') as HTMLDivElement;\n\nexport function validateLastName() {\n  const isRequired = lastNameInput.hasAttribute('required');\n  if (isRequired && lastNameInput.value.trim() === '') {\n    lastNameError.textContent = 'Last name required';\n    lastNameError.style.display = 'block';\n    lastNameInput.classList.add('error');\n    return false;\n  }\n  lastNameError.textContent = '';\n  lastNameError.style.display = 'none';\n  lastNameInput.classList.remove('error');\n  return true;\n}\n\nif (lastNameInput) {\n  lastNameInput.addEventListener('blur', validateLastName);\n}\n\n// Validate Email Input\nconst emailInput = document.getElementById('emailInput') as HTMLInputElement;\nconst emailError = document.getElementById('emailError') as HTMLDivElement;\n\nexport function validateEmail() {\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n  if (emailInput.hasAttribute('required') && emailInput.value.trim() === '') {\n    emailError.textContent = 'Email is required';\n    emailError.style.display = 'block';\n    emailInput.classList.add('error');\n    return false;\n  }\n  if (emailInput.value.trim() !== '' && !emailRegex.test(emailInput.value)) {\n    emailError.textContent = 'Please enter a valid email';\n    emailError.style.display = 'block';\n    emailInput.classList.add('error');\n    return false;\n  }\n  emailError.textContent = '';\n  emailError.style.display = 'none';\n  emailInput.classList.remove('error');\n  return true;\n}\n\nif (emailInput) {\n  emailInput.addEventListener('blur', validateEmail);\n}\n\n// Validate Password Input\nconst passwordInput = document.getElementById('passwordInput') as HTMLInputElement;\nconst passwordError = document.getElementById('passwordError') as HTMLDivElement;\n\nexport function validatePassword() {\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/; // Adjust regex based on your requirement\n  if (passwordInput.hasAttribute('required') && passwordInput.value.trim() === '') {\n    passwordError.textContent = 'Password is required';\n    passwordError.style.display = 'block';\n    passwordInput.classList.add('error');\n    return false;\n  }\n  if (!passwordRegex.test(passwordInput.value)) {\n    passwordError.textContent =\n      'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character';\n    passwordError.style.display = 'block';\n    passwordInput.classList.add('error');\n    return false;\n  }\n  passwordError.textContent = '';\n  passwordError.style.display = 'none';\n  passwordInput.classList.remove('error');\n  return true;\n}\n\nif (passwordInput) {\n  passwordInput.addEventListener('blur', validatePassword);\n  passwordInput.addEventListener('input', validatePassword); // Validate password on each input\n}\n\n// Validate New Password Input\nconst newPasswordInput = document.getElementById('newPasswordInput') as HTMLInputElement;\nconst newPasswordError = document.getElementById('newPasswordError') as HTMLDivElement;\n\n// Validate Confirm Password Input\nconst confirmPasswordInput = document.getElementById('confirmPasswordInput') as HTMLInputElement;\nconst confirmPasswordError = document.getElementById('confirmPasswordError') as HTMLDivElement;\n\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n\nexport function validateNewPassword() {\n  if (newPasswordInput.hasAttribute('required') && newPasswordInput.value.trim() === '') {\n    newPasswordError.textContent = 'New password is required';\n    newPasswordError.style.display = 'block';\n    newPasswordInput.classList.add('error');\n    return false;\n  }\n  if (!passwordRegex.test(newPasswordInput.value)) {\n    newPasswordError.textContent =\n      'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character';\n    newPasswordError.style.display = 'block';\n    newPasswordInput.classList.add('error');\n    return false;\n  }\n  newPasswordError.textContent = '';\n  newPasswordError.style.display = 'none';\n  newPasswordInput.classList.remove('error');\n  return true;\n}\n\nexport function validateConfirmPassword() {\n  if (confirmPasswordInput.value !== newPasswordInput.value) {\n    confirmPasswordError.textContent = 'Passwords do not match';\n    confirmPasswordError.style.display = 'block';\n    confirmPasswordInput.classList.add('error');\n    return false;\n  }\n  confirmPasswordError.textContent = '';\n  confirmPasswordError.style.display = 'none';\n  confirmPasswordInput.classList.remove('error');\n  return true;\n}\n\nif (newPasswordInput) {\n  newPasswordInput.addEventListener('blur', validateNewPassword);\n  newPasswordInput.addEventListener('input', validateNewPassword);\n}\n\nif (confirmPasswordInput) {\n  confirmPasswordInput.addEventListener('blur', validateConfirmPassword);\n  confirmPasswordInput.addEventListener('input', validateConfirmPassword);\n}\n\n// Validate Phone Input\nconst phoneInput = document.getElementById('phoneInput') as HTMLInputElement;\nconst phoneError = document.getElementById('phoneError') as HTMLDivElement;\n\nexport function formatPhoneNumber(value: string) {\n  const phoneNumber = value.replace(/\\D/g, '');\n  if (phoneNumber.length === 0) {\n    return '';\n  }\n  if (phoneNumber.length < 4) {\n    return `(${phoneNumber}`;\n  }\n  if (phoneNumber.length < 7) {\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n  }\n  return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n}\n\nexport function validatePhone() {\n  const phoneRegex = /^\\D*(\\d{3})\\D*\\D*(\\d{3})\\D*(\\d{4})\\D*$/;\n  const isRequired = phoneInput.required;\n  if (isRequired && phoneInput.value.trim() === '') {\n    phoneError.textContent = 'Phone is required';\n    phoneError.style.display = 'block';\n    phoneInput.classList.add('error');\n    return false;\n  }\n  if (phoneInput.value.trim() !== '' && !phoneRegex.test(phoneInput.value)) {\n    phoneError.textContent = 'Please enter a valid phone number';\n    phoneError.style.display = 'block';\n    phoneInput.classList.add('error');\n    return false;\n  }\n  phoneInput.value = formatPhoneNumber(phoneInput.value);\n  phoneError.textContent = '';\n  phoneError.style.display = 'none';\n  phoneInput.classList.remove('error');\n  return true;\n}\nif (phoneInput) {\n  phoneInput.addEventListener('input', (event) => {\n    const input = event.target as HTMLInputElement;\n    input.value = formatPhoneNumber(input.value);\n    validatePhone();\n  });\n}\n\n//validate DOB\nconst dobInput = document.getElementById('dobInput') as HTMLInputElement;\nconst dobError = document.getElementById('dobError') as HTMLDivElement;\n\nexport function validateDOB() {\n  if (dobInput.hasAttribute('required') && dobInput.value.trim() === '') {\n    dobError.textContent = 'Date of Birth is required';\n    dobError.style.display = 'block';\n    dobInput.classList.add('error');\n    return false;\n  }\n  dobError.textContent = '';\n  dobError.style.display = 'none';\n  dobInput.classList.remove('error');\n  return true;\n}\n\nif (dobInput) {\n  dobInput.addEventListener('blur', validateDOB);\n}\n\n//validate gender\nconst genderInput = document.getElementById('genderInput') as HTMLInputElement;\nconst genderError = document.getElementById('genderError') as HTMLDivElement;\n\nexport function validateGender() {\n  if (genderInput.hasAttribute('required') && genderInput.value.trim() === '') {\n    genderError.textContent = 'Gender is required';\n    genderError.style.display = 'block';\n    genderInput.classList.add('error');\n    return false;\n  }\n  genderError.textContent = '';\n  genderError.style.display = 'none';\n  genderInput.classList.remove('error');\n  return true;\n}\n\nif (genderInput) {\n  genderInput.addEventListener('blur', validateGender);\n}\n\n// validate school name\nconst schoolInput = document.getElementById('schoolInput') as HTMLInputElement;\nconst schoolError = document.getElementById('schoolError') as HTMLDivElement;\n\nexport function validateSchool() {\n  if (schoolInput.hasAttribute('required') && schoolInput.value.trim() === '') {\n    schoolError.textContent = 'School name is required';\n    schoolError.style.display = 'block';\n    schoolInput.classList.add('error');\n    return false;\n  }\n  schoolError.textContent = '';\n  schoolError.style.display = 'none';\n  schoolInput.classList.remove('error');\n  return true;\n}\n\nif (schoolInput) {\n  schoolInput.addEventListener('blur', validateSchool);\n}\n\n// validate grade\nconst gradeInput = document.getElementById('gradeInput') as HTMLInputElement;\nconst gradeError = document.getElementById('gradeError') as HTMLDivElement;\n\nexport function validateGrade() {\n  if (gradeInput.hasAttribute('required') && gradeInput.value.trim() === 'N/A') {\n    gradeError.textContent = 'Grade is required';\n    gradeError.style.display = 'block';\n    gradeInput.classList.add('error');\n    return false;\n  }\n  gradeError.textContent = '';\n  gradeError.style.display = 'none';\n  gradeInput.classList.remove('error');\n  return true;\n}\n\nif (gradeInput) {\n  gradeInput.addEventListener('blur', validateGrade);\n}\n\n// validate ethnicity\nconst ethnicityInput = document.getElementById('ethnicityInput') as HTMLInputElement;\nconst ethnicityError = document.getElementById('ethnicityError') as HTMLDivElement;\n\nexport function validateEthnicity() {\n  if (ethnicityInput.hasAttribute('required') && ethnicityInput.value.trim() === '') {\n    ethnicityError.textContent = 'Ethnicity is required';\n    ethnicityError.style.display = 'block';\n    ethnicityInput.classList.add('error');\n    return false;\n  }\n  ethnicityError.textContent = '';\n  ethnicityError.style.display = 'none';\n  ethnicityError.classList.remove('error');\n  return true;\n}\n\nif (ethnicityError) {\n  ethnicityInput.addEventListener('blur', validateEthnicity);\n}\n\n// validate health input\nconst healthInput = document.getElementById('healthInput') as HTMLInputElement;\nconst healthError = document.getElementById('healthError') as HTMLDivElement;\n\nexport function validateHealth() {\n  if (healthInput.hasAttribute('required') && healthInput.value.trim() === '') {\n    healthError.textContent = 'This field is required';\n    healthError.style.display = 'block';\n    healthInput.classList.add('error');\n    return false;\n  }\n  healthError.textContent = '';\n  healthError.style.display = 'none';\n  healthInput.classList.remove('error');\n  return true;\n}\n\nif (healthInput) {\n  healthInput.addEventListener('blur', validateHealth);\n}\n\n// validate emergency contact\nconst emergencyInput = document.getElementById('emergencyContact') as HTMLInputElement;\nconst emergencyError = document.getElementById('emergencyError') as HTMLDivElement;\n\nexport function validateEmergency() {\n  if (emergencyInput.hasAttribute('required') && emergencyInput.value.trim() === '') {\n    emergencyError.textContent = 'This field is required';\n    emergencyError.style.display = 'block';\n    emergencyInput.classList.add('error');\n    return false;\n  }\n  emergencyError.textContent = '';\n  emergencyError.style.display = 'none';\n  emergencyInput.classList.remove('error');\n  return true;\n}\n\nif (emergencyInput) {\n  emergencyInput.addEventListener('blur', validateEmergency);\n}\n\n// validate dismissal\nconst dismissal = document.getElementById('dismissal') as HTMLInputElement;\nconst dismissalError = document.getElementById('dismissalError') as HTMLDivElement;\n\nexport function validateDismissal() {\n  if (dismissal.hasAttribute('required') && dismissal.value.trim() === '') {\n    dismissalError.textContent = 'This field is required';\n    dismissalError.style.display = 'block';\n    dismissal.classList.add('error');\n    return false;\n  }\n  dismissalError.textContent = '';\n  dismissalError.style.display = 'none';\n  dismissal.classList.remove('error');\n  return true;\n}\n\nif (dismissal) {\n  dismissal.addEventListener('blur', validateDismissal);\n}\n\n// Validate Additional Email\nconst additionalEmail = document.getElementById('additionalEmail') as HTMLInputElement;\nconst additionalEmailError = document.getElementById('additionalEmailError') as HTMLDivElement;\n\nexport function validateAdditionalEmail() {\n  const additionalEmailRegex = /^\\S+@\\S+\\.\\S+$/;\n  if (additionalEmail.hasAttribute('required') && additionalEmail.value.trim() === '') {\n    additionalEmailError.textContent = 'Email is required';\n    additionalEmailError.style.display = 'block';\n    additionalEmail.classList.add('error');\n    return false;\n  }\n  if (additionalEmail.value.trim() !== '' && !additionalEmailRegex.test(additionalEmail.value)) {\n    additionalEmailError.textContent = 'Please enter a valid email';\n    additionalEmailError.style.display = 'block';\n    additionalEmail.classList.add('error');\n    return false;\n  }\n  additionalEmailError.textContent = '';\n  additionalEmailError.style.display = 'none';\n  additionalEmail.classList.remove('error');\n  return true;\n}\n\nif (additionalEmail) {\n  additionalEmail.addEventListener('blur', validateAdditionalEmail);\n}\n\n// Validate interestInput\nconst interestInput = document.getElementById('interestInput') as HTMLInputElement;\nconst interestError = document.getElementById('interestError') as HTMLDivElement;\n\nexport function validateInterest() {\n  if (interestInput.hasAttribute('required') && interestInput.value.trim() === '') {\n    interestError.textContent = 'This field is required';\n    interestError.style.display = 'block';\n    interestInput.classList.add('error');\n    return false;\n  }\n  interestError.textContent = '';\n  interestError.style.display = 'none';\n  interestInput.classList.remove('error');\n  return true;\n}\n\nif (interestInput) {\n  interestInput.addEventListener('blur', validateInterest);\n}\n\n// validate blood type\nconst bloodType = document.getElementById('bloodType') as HTMLInputElement;\nconst bloodTypeError = document.getElementById('bloodTypeError') as HTMLDivElement;\n\nexport function validateBloodType() {\n  if (bloodType.hasAttribute('required') && bloodType.value.trim() === '') {\n    bloodTypeError.textContent = 'This field is required';\n    bloodTypeError.style.display = 'block';\n    bloodType.classList.add('error');\n    return false;\n  }\n  bloodTypeError.textContent = '';\n  bloodTypeError.style.display = 'none';\n  bloodType.classList.remove('error');\n  return true;\n}\n", "import { validateConfirmPassword, validateNewPassword } from './utils/forms/inputValidation';\n\n// Check for authToken on load and redirect if not found\nwindow.onload = () => {\n  const authToken = localStorage.getItem('authToken');\n  if (!authToken) {\n    window.location.href = '/password-request';\n  }\n};\n\nasync function submitPasswordReset() {\n  const newPasswordInput = document.getElementById('newPasswordInput') as HTMLInputElement;\n  const confirmPasswordInput = document.getElementById('confirmPasswordInput') as HTMLInputElement;\n  const submitError = document.getElementById('submitError') as HTMLDivElement;\n  const successMessage = document.getElementById('successMessage') as HTMLDivElement;\n  const loadingAnimation = document.getElementById('loadingAnimation') as HTMLDivElement;\n  const loginWrapper = document.getElementById('loginWrapper') as HTMLDivElement;\n\n  if (!validateNewPassword() || !validateConfirmPassword()) {\n    submitError.textContent = 'Please correct the errors before submitting.';\n    submitError.style.display = 'block';\n    return;\n  }\n\n  loadingAnimation.style.display = 'block';\n  submitError.style.display = 'none';\n\n  const authToken = localStorage.getItem('authToken');\n  if (!authToken) {\n    submitError.textContent = 'Authentication token is missing.';\n    submitError.style.display = 'block';\n    loadingAnimation.style.display = 'none';\n    return;\n  }\n\n  try {\n    const response = await fetch('https://xszy-vp96-kdkh.n7c.xano.io/api:WyQO-hFi/reset-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${authToken}`,\n      },\n      body: JSON.stringify({\n        newPassword: newPasswordInput.value,\n        confirmPassword: confirmPasswordInput.value,\n      }),\n    });\n\n    loadingAnimation.style.display = 'none';\n\n    if (response.ok) {\n      loginWrapper.style.display = 'none';\n      successMessage.style.display = 'block';\n    } else {\n      const responseData = await response.json();\n      submitError.textContent = responseData.message;\n      submitError.style.display = 'block';\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    submitError.textContent = 'An error occurred while trying to reset the password.';\n    submitError.style.display = 'block';\n    loadingAnimation.style.display = 'none';\n  }\n}\n\nconst submitButton = document.getElementById('submitButton') as HTMLButtonElement;\nif (submitButton) {\n  submitButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    submitPasswordReset();\n  });\n}\n"],
  "mappings": "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",
  "names": ["passwordRegex", "newPasswordInput", "confirmPasswordInput"]
}
